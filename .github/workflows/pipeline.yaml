name: Pipeline

on:
  push:
    branches:
      - "ci"

env:
  CI: false
  REGISTRY_ORG: deepintentorg

jobs:
  build_deploy:
    runs-on: [self-hosted]

    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: Init
        shell: bash
        run: |
          echo ::set-env name=BRANCH::"$(git rev-parse --abbrev-ref HEAD)" && echo $BRANCH
          echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//") && echo $REPOSITORY_NAME
          echo ::set-env name=DEPLOYMENT::$(echo "advertiser-api") && DEPLOYMENT

      - uses: shonansurvivors/actions-s3-cache@v1.0.1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        with:
          s3-bucket: di-github-actions-cache
          cache-key: ec1462f467fb42861537d7da3636a472fdb0fb0462959f26726de7aec3be0a34
          paths: .m2
          command: echo "1"
          zip-option: -ryq
          unzip-option: -n
          working-directory: ./

      - name: Build
        shell: bash
        run: |
          echo "Build"
          mvn -ntp ${{ secrets.MAVEN_OPTS }} install

      - name: Package
        shell: bash
        env:
          GITHUBTOKEN: ${{ secrets.GITHUBTOKEN }}
        run: |
          echo "Package"

      - name: Deploy
        shell: bash
        env:
          GITHUBTOKEN: ${{ secrets.GITHUBTOKEN }}
        run: |
          echo "Deploy"

      - uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: ${{ job.author }}
          text: Pipeline triggered by ${{ github.event_name	}} event for  ${{ github.repository }} for branch ${{ github.ref }} has status - ${{ job.status }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: always()